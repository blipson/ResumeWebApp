<head>
	<script type="text/javascript" src="../../Scripts/glMatrix-0.9.5.min.js"></script>
	<script type="text/javascript" src="../../Scripts/webgl-utils.js"></script>

	<script type="text/javascript">
		
		var audioContext,
			sourceNode,
			javascriptNode,
			analyser;

		var canvasContext2d,
			gradient;

		

		function init() {
			setUp2dCanvasContext();
			setUpAudioContext();
			setUpAudioNodes();
			loadSound('../../mp3/KokirikoBushi.mp3');
		}

		function setUp2dCanvasContext() {
			canvasContext2d = document.getElementById('musicVisCanvas2d').getContext('2d');
			gradient = canvasContext2d.createLinearGradient(0, 0, 0, 300);
			gradient.addColorStop(1, '#000000');
			gradient.addColorStop(0.75, '#ff0000');
			gradient.addColorStop(0.25, '#ffff00');
			gradient.addColorStop(0, '#ffffff');
		}

		function setUpAudioContext() {
			try {
				window.AudioContext = window.AudioContext || window.webkitAudioContext;
				audioContext = new (window.AudioContext || window.webkitAudioContext)();
			}
			catch (e) {
				alert('Web Audio API is not supported in this browser');
			}
		}

		function setUpAudioNodes() {
			javascriptNode = audioContext.createScriptProcessor(2048, 1, 1);
			javascriptNode.connect(audioContext.destination);

			analyser = audioContext.createAnalyser();
			analyser.smoothingTimeConstant = 0.3;
			analyser.fftSize = 512;

			sourceNode = audioContext.createBufferSource();
			sourceNode.connect(analyser);
			sourceNode.connect(javascriptNode);
			sourceNode.connect(audioContext.destination);
		}

		function loadSound(url) {
			var request = new XMLHttpRequest();
			request.open('GET', url, true);
			request.responseType = 'arraybuffer';

			request.onload = function () {
				audioContext.decodeAudioData(request.response, function (buffer) {
					playSound(buffer);
					draw();
				}, onError);
			}
			request.send();
		}

		function playSound(buffer) {
			sourceNode.buffer = buffer;
			sourceNode.start(0);
		}

		function draw() {
			var array = new Uint8Array(analyser.frequencyBinCount);
			analyser.getByteFrequencyData(array);

			canvasContext2d.clearRect(0, 0, 1000, 325);

			canvasContext2d.fillStyle = gradient;
			drawSpectrum(array);
			window.requestAnimationFrame(draw);
		}

		function drawSpectrum(array) {
			for (var i = 0; i < (array.length) ; i++) {
				var value = array[i];
				canvasContext2d.fillRect(i * 5, 325 - value, 3, 325);
			}
		}

		function onError(e) {
			console.log(e);
		}

	</script>
</head>
<body onload="init()">
	<canvas id="musicVisCanvas2d" width="500" height="500"></canvas>
</body>